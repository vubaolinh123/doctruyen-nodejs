const apiLogger = (req, res, next) => {
  // L∆∞u th·ªùi gian b·∫Øt ƒë·∫ßu
  const start = Date.now();

  // Ghi log khi request ƒë·∫øn
  console.log(`üåê [${new Date().toISOString()}] ${req.method} ${req.originalUrl}`);

  // L∆∞u h√†m g·ªëc c·ªßa res.json
  const originalJson = res.json;

  // Ghi ƒë√® h√†m res.json ƒë·ªÉ b·∫Øt response
  res.json = function (body) {
    // T√≠nh th·ªùi gian x·ª≠ l√Ω
    const duration = Date.now() - start;

    // X√°c ƒë·ªãnh icon d·ª±a tr√™n status code
    let icon = '‚ö†Ô∏è';
    if (res.statusCode >= 200 && res.statusCode < 300) {
      icon = '‚úÖ';
    } else if (res.statusCode >= 400) {
      icon = '‚ùå';
    }

    // Log response v·ªõi status code v√† icon
    console.log(`${icon} [${new Date().toISOString()}] ${req.method} ${req.originalUrl} - Status: ${res.statusCode} - Duration: ${duration}ms`);
    
    // N·∫øu l√† l·ªói, log th√™m th√¥ng tin l·ªói
    if (res.statusCode >= 400) {
      console.log(`‚ùå Error details:`, body);
    }

    // G·ªçi h√†m g·ªëc
    return originalJson.call(this, body);
  };

  next();
};

module.exports = apiLogger; 